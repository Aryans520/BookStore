// <auto-generated />
using BookStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20250303080315_AddSomeTables")]
    partial class AddSomeTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "این ژانر در جهان داستانی‌ای واقع شده که غالبا از افسانه‌ها و فولکور در جهان واقعی الهام گرفته شده است. ریشه این ژانر در سنت‌های شفاهی است و از قرن بیستم به رسانه های مختلفی از جمله فیلم، تلویزیون، رمان، فیلم‌های متحرک و بازی های ویدیویی راه یافته است.\r\nبا وجود همپوشانی برخی ژانرها با هم، این ژانر از کتاب به دلیل عدم وجود مضامین علمی و خیلی مهم، از ژانرهای دیگری چون علمی و ترسناک، متمایز است. این ژانر یکی از محبوب‌ترین انواع کتاب است",
                            Name = "فانتزی (Fantasy)"
                        },
                        new
                        {
                            Id = 2,
                            Description = "داستانهای ماجراجویی، ژانری از داستان‌ها هستند که معمولاً خطرآفرینند یا هیجان را به خواننده القا می کنند.",
                            Name = "ماجراجویی (Action and adventure)"
                        },
                        new
                        {
                            Id = 3,
                            Description = "این نوع کتاب، بر اساس روابط و احساسات بین دو نفر شکل گرفته شده‌است. اینگونه رمان‌ها خود به زیردسته‌هایی تقسیم می‌شوند. مثلا بهترین رمان های تاریخی عاشقانه یکی از این زیردسته‌هاست.",
                            Name = "عاشقانه (Romance)"
                        },
                        new
                        {
                            Id = 4,
                            Description = "نویسنده در این سبک با تصویر کردن یک فضای وهم آور و ترسناک سعی در ترساندن و تهییج خواننده دارد. غالباً آنچه در یک کتاب داستانی ترسناک یک تهدید محسوب می‌شود، استعاره ای از ترس بزرگتر یک جامعه است.",
                            Name = " ترسناک (Horror)"
                        },
                        new
                        {
                            Id = 5,
                            Description = "در این نوع از انواع کتاب، اغلب قهرمانی سرسخت و باهوش دیده می‌شود. اما این قهرمان انسانی معمولی است که در برابر اشرار قرار می‌گیرد و سعی در نجات کشور و … است.",
                            Name = "مهیج (Thriller)"
                        },
                        new
                        {
                            Id = 6,
                            Description = "داستان‌های علمی-تخیلی، ژانری از کتاب است که به‌طور معمول با مفاهیم خیالی و آینده نگرانه سروکار دارد. مفاهیمی چون علم و فناوری، اکتشافات فضایی، سفر در زمان، جهان‌های موازی و زندگی فرازمینی.\r\nاین ژانر علاوه بر سرگرمی، می‌تواند جامعه‌ی امروزی را نیز مورد انتقاد قرار دهد و در بسیاری موارد نیز الهام‌بخش و زمینه‌ساز اکتشافات جدید باشد.",
                            Name = " علمی تخیلی (Science fiction)"
                        },
                        new
                        {
                            Id = 7,
                            Description = "بیشتر کتاب‌های هنری،به شرح چگونگی خلق آثار هنری می‌پردازد. این آثار می‌تواند شامل آثار دیداری، شنیداری، نمایشی و … باشند.\r\nبسیاری ازین نوع کتاب‌ها، به بررسی زندگی هنرمندان بزرگ و معروف می‌پردازند و یا آثار هنری آنها را مورد نمقد و بررسی قرار می‌دهند. مطالعه تاریخ هنر و بررسی جنبه‌های زیباشناسانه‌ی آثار هنری از دیگر مباحثی است که در کتاب‌های هنری مورد توجه قرار می‌گیرد.",
                            Name = "هنری(Art)"
                        },
                        new
                        {
                            Id = 8,
                            Description = "کتاب‌های انگیزشی ما را برای روبرویی با چالش‌های احتمالی زندگی واقعی آماده می‌کنند. در زندگی تمام انسان‌ها لحظاتی پیش می‌آید که از زندگی ناامید می‌شویم و تمام نیرو و انرژی‌مان تحلیل می‌رود. اینجاست که کتاب‌های انگیزشی به کمک ما می‌آیند.\r\nکتاب‌های روانشناسی و انگیزشی به خواننده فرصت شناخت خود را می‌دهد و به این ترتیب با نیروی بازیافته، مصمم به سمت هدف می‌رویم.",
                            Name = "انگیزشی(Motivational)"
                        },
                        new
                        {
                            Id = 9,
                            Description = "نویسنده در کتاب‌های طنز، با ادبیاتی شیرین و نغز، مسائل مهم اجتماعی و سیاسی را با نگاهی نقادانه به رشته‌ی تحریر در می‌آورد. در این کتاب‌ها، تمام معایب و مفاسد و کمبودها به گونه‌ای اغراق‌آمیز بیان می‌شود تا زشتی آن مسئله بیشتر دیده‌شود.\r\n\r\n",
                            Name = "طنز(Humer)"
                        },
                        new
                        {
                            Id = 10,
                            Description = "کودک تنها به خوراک و پوشاک نیاز ندارد. هرچند این‌ها نیازهای اولیه‌ی هر انسانی‌ست، اما رشد ذهنی نیز اهمیت ویژه‌ای در تربیت کودکان دارد.\r\nوظیفه‌ی هر والدی اینست که زمینه را برای چگونه زیستن و نحوه‌ی شکل‌گیری افکار و شخصیت کودکانمان هموار کند. چاپ کتاب‌ کودک و نوجوان کمک بزرگی برای خانواده‌ها محسوب می‌شوند.",
                            Name = "کودکان(Children’s)"
                        },
                        new
                        {
                            Id = 11,
                            Description = "در این کتاب ها به شرح حال زندگی افراد پرداخته می‌شود، معمولا این نوع از کتاب ها به زبان خوده شخص و یا یک فرد دیگر برای افراد مشهور و شناخته شده نوشته میشود.",
                            Name = " کتاب های زندگینامه"
                        });
                });

            modelBuilder.Entity("BookStore.Models.CategoryToProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryToProducts");
                });

            modelBuilder.Entity("BookStore.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("Money");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BookStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BookStore.Models.CategoryToProduct", b =>
                {
                    b.HasOne("BookStore.Models.Category", "Category")
                        .WithMany("CategoryToProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Models.Product", "Product")
                        .WithMany("CategoryToProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BookStore.Models.Product", b =>
                {
                    b.HasOne("BookStore.Models.Item", "Item")
                        .WithOne("Product")
                        .HasForeignKey("BookStore.Models.Product", "ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("BookStore.Models.Category", b =>
                {
                    b.Navigation("CategoryToProducts");
                });

            modelBuilder.Entity("BookStore.Models.Item", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("BookStore.Models.Product", b =>
                {
                    b.Navigation("CategoryToProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
